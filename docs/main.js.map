{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bluetooth-listing/bluetooth-listing.component.css","webpack:///./src/app/bluetooth-listing/bluetooth-listing.component.html","webpack:///./src/app/bluetooth-listing/bluetooth-listing.component.ts","webpack:///./src/app/services/signal-r.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<app-bluetooth-listing></app-bluetooth-listing>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SignalRService } from './services/signal-r.service';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-sandbox';\r\n  \r\n  constructor(public signalRService: SignalRService, private http: HttpClient){}\r\n\r\n  ngOnInit(){\r\n    this.signalRService.startConnection();\r\n    this.signalRService.addTransferChartDataListener();\r\n\r\n    this.startHttpRequest();\r\n  }\r\n  startHttpRequest(){\r\n    this.http.get('https://localhost:5001/api/chart')\r\n    .subscribe(res => {\r\n      console.log(\"Data:  \" + res);\r\n    });\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n//import {NgChartsModule} from 'ng2-charts';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BluetoothListingComponent } from './bluetooth-listing/bluetooth-listing.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BluetoothListingComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    //NgChartsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"#comHeader{\\r\\n    color: whitesmoke;\\r\\n    font-size:60px;\\r\\n    margin: 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYmx1ZXRvb3RoLWxpc3RpbmcvYmx1ZXRvb3RoLWxpc3RpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixjQUFjO0lBQ2QsU0FBUztBQUNiIiwiZmlsZSI6InNyYy9hcHAvYmx1ZXRvb3RoLWxpc3RpbmcvYmx1ZXRvb3RoLWxpc3RpbmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjb21IZWFkZXJ7XHJcbiAgICBjb2xvcjogd2hpdGVzbW9rZTtcclxuICAgIGZvbnQtc2l6ZTo2MHB4O1xyXG4gICAgbWFyZ2luOiAwO1xyXG59Il19 */\"","module.exports = \"<h1 id=\\\"comHeader\\\">E3K Heart Rate</h1>\\r\\n<h1 [textContent]=\\\"heartRate\\\"></h1>\\r\\n<button (click)=\\\"SearchBluetooth()\\\">Search BLE</button>\\r\\n\\r\\n<button (click)=\\\"SingalRSend()\\\">Signal-r Send</button>\\r\\n\\r\\n\"","import { Component, Output } from '@angular/core';\r\nimport { NgxSerial } from 'ngx-serial';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Component({\r\n  selector: 'app-bluetooth-listing',\r\n  templateUrl: './bluetooth-listing.component.html',\r\n  styleUrls: ['./bluetooth-listing.component.css']\r\n})\r\nexport class BluetoothListingComponent{\r\n  serial:NgxSerial;\r\n  port:any;\r\n  peak:number;\r\n\r\n  @Output() heartRate = \"\";\r\n  constructor(private http:HttpClient) \r\n  { \r\n    let options = \r\n    { \r\n      baudRate: 115200, \r\n      dataBits: 8, \r\n      parity: 'none', \r\n      bufferSize: 256, \r\n      flowControl: 'none' \r\n    };\r\n    \r\n    this.serial = new NgxSerial(data=>{\r\n      this.data = data;\r\n      console.log(data);\r\n    }, options);\r\n  }\r\n  @Output() data!:string;\r\n\r\n  SignalRSend(){\r\n    this.http.post('https://localhost:5001/api/chart',\"quentin\");\r\n  }\r\n\r\n  SearchBluetooth() {\r\n    this.heartRate = \"\";\r\n    let options = {\r\n      filters: [\r\n        {services: ['heart_rate']},\r\n        {services: [0x1802, 0x1803]},\r\n      ]\r\n    } \r\n    \r\n    return navigator.bluetooth.requestDevice(options)\r\n    .then(device => {\r\n      console.log('did we make it');\r\n      return device.gatt.connect();\r\n    })\r\n    .then(server => {\r\n      console.log('did we make it');\r\n      return server.getPrimaryService('heart_rate');\r\n    })\r\n    .then(service => {\r\n      console.log('did we make it');\r\n      return service.getCharacteristic('heart_rate_measurement');\r\n    })\r\n    .then(characteristic => {\r\n      characteristic.startNotifications().then(()=>{\r\n        characteristic.addEventListener('characteristicvaluechanged', ()=>{\r\n          if(characteristic.value){\r\n\r\n            console.log('> ' + characteristic.value.getUint8(0).toString());\r\n            this.heartRate = characteristic.value.getUint8(0).toString();\r\n        }\r\n        });\r\n      });\r\n    }).catch(error => {\r\n      console.log('Argh!! ' + error);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport * as signalR from '@aspnet/signalr';\nimport { ChartModel } from '../_interfaces/chartmodel.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalRService {\n  public data: ChartModel[];\n  private hubConnection: signalR.HubConnection;\n  \n  public startConnection = () => {\n    this.hubConnection = new signalR.HubConnectionBuilder()\n    .withUrl('https://localhost:5001/chart')\n    .build();\n\n    this.hubConnection.start()\n    .then(() => console.log('Connection started'))\n    .catch(err => console.log('Error while starting connection: ' + err))\n  }\n  public addTransferChartDataListener = () => {\n    this.hubConnection.on('transferchartdata', (data)=>{\n      this.data = data;\n      console.log(data);\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}